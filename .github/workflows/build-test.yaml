name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  HOMEBREW_NO_AUTO_UPDATE: 1

jobs:

  build:
    name: "${{ matrix.tests-type }} tests: py${{ matrix.python-version }} on ${{ matrix.os }} (${{ matrix.test-runner }})"
    strategy:
      matrix:
        os: [
          macos-latest,
          windows-latest,
          ubuntu-latest,
        ]
        python-version: ['3.10']
        dependencies: [full]
        tests-type: [unit]
        test-runner: [pytest]
        include:
          - os: ubuntu-latest
            python-version: '3.7'
            dependencies: minimal
            tests-type: unit
            test-runner: pytest
          - os: ubuntu-latest
            # this job is necessary for non-answer, 'yield' based tests
            # because pytest doesn't support such tests, and nose is not
            # compatible with Python 3.10
            python-version: '3.9'
            dependencies: full
            tests-type: unit
            test-runner: nose
          - os: ubuntu-latest
            # answer tests use 'yield', so they require nose
            # they are also attached to a specific, occasionally updated, Python version
            # but it does *not* have to match the current minimal supported version
            python-version: '3.9'
            dependencies: full
            tests-type: answer
            test-runner: nose
          - os: ubuntu-latest
            # bare environment with latest CPython
            # (no special requirements, no optional dependencies)
            # this job is meant to be removed when wheels are available
            # for all (or most) optional dependencies and we can bump 3.10 -> 3.11
            python-version: '3.11-dev'
            dependencies: ""
            tests-type: unit
            test-runner: pytest

    runs-on: ${{ matrix.os }}

    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Checkout repo (bare)
      if: matrix.tests-type != 'answer'
      uses: actions/checkout@v3
    - name: Checkout repo (with submodules)
      if: matrix.tests-type == 'answer'
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Conda (windows only)
      uses: s-weigand/setup-conda@v1
      if: matrix.os == 'windows-latest'
      with:
        update-conda: true
        conda-channels: conda-forge
        activate-conda: true
        python-version: ${{matrix.python-version}}
    - name: Install dependencies and yt
      shell: bash
      env:
        dependencies: ${{ matrix.dependencies }}
      run: source ./tests/ci_install.sh
    - name: Run Tests (pytest)
      if: matrix.test-runner == 'pytest'
      env:
        testsuite: ${{ matrix.tests-type }}
      run: pytest --color=yes
    - name: Run Tests (nose)
      if: matrix.test-runner == 'nose'
      env:
        testsuite: ${{ matrix.tests-type }}
      run: python -m nose -c nose_${testsuite}.cfg --traverse-namespace
    - name: Report Failed Answers
      if: ${{ matrix.tests-type == 'answer' && failure() }}
      shell: bash
      run: python tests/report_failed_answers.py -f -m --xunit-file answer_nosetests.xml
