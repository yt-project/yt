name: Build CI Wheels

on:
  push:
    branches:
      - main
      - stable
    tags:
      - 'yt-*'
  pull_request:
    paths:
      - '.github/workflows/wheels.yaml'
      - MANIFEST.in
      - pyproject.toml
      - setup.py
      - setupext.py
  workflow_dispatch:


jobs:
  build_wheels:
    name: Build ${{ matrix.select }}-${{ matrix.archs }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          archs: x86_64
          select: '*manylinux*'
          id: manylinux_x86_64
        - os: ubuntu-latest
          archs: x86_64
          select: '*musllinux*'
          id: musllinux_x86_64
        - os: macos-latest
          archs: x86_64
          select: '*'
          id: macos_x86_64
        - os: macos-latest
          archs: arm64
          select: '*'
          id: macos_arm64
        - os: windows-latest
          archs: AMD64
          select: '*'
          id: windows_AMD64

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build wheels for CPython
        uses: pypa/cibuildwheel@v3.1.4
        with:
          output-dir: dist
        env:
          CIBW_ARCHS: ${{ matrix.archs }}
          CIBW_BUILD: ${{ matrix.select }}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.id }}
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build sdist
        run: pipx run build --sdist

      - name: Test sdist
        run: |
          python -m pip install "$(echo dist/*.tar.gz)[test]"
          python -m pip list
          project_dir=$(pwd)
          cd ../../
          pytest -c $project_dir/pyproject.toml --rootdir . --color=yes --pyargs yt

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  check_manifest:
    name: Check MANIFEST.in
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: install check-manifest
      run: |
        python -m pip install --upgrade pip
        python -m pip install check-manifest
    - name: Install build time dependencies
      shell: bash

      # keep in sync with pyproject.toml
      run: |
        python -m pip install Cython>=3.0.3
        python -m pip install numpy>=2.0.0
        python -m pip install ewah-bool-utils>=1.2.0
        python -m pip install --upgrade setuptools
    - name: build yt
      shell: bash
      run: |
        python -m pip install --no-build-isolation .
    - name: run check-manifest
      run: check-manifest -vvv

  deploy:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist, check_manifest]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'yt-'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/yt-')
    steps:
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
