name: CI (bleeding edge)
# this workflow is heavily inspired from pandas, see
# https://github.com/pandas-dev/pandas/blob/master/.github/workflows/python-dev.yml

# goals: check stability against
# - dev version of Python, numpy, matplotlib, and unyt
# - Cython and pytest pre-releases

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - .github/workflows/bleeding-edge.yaml
  schedule:
    # run this every Wednesday at 3 am UTC
    - cron: 0 3 * * 3
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: "tests with bleeding-edge crucial deps"
    timeout-minutes: 60

    concurrency:
      # auto-cancel any in-progress job *on the same branch*
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout repo
      uses: actions/checkout@v5

    - name: Set up Python (newest testable version)
      uses: astral-sh/setup-uv@v7
      with:
        # this version should be upgraded as often as possible, typically once a year when
        # Cython, numpy and matplotlib are known to be compatible
        python-version: '3.14'
        enable-cache: false
        activate-environment: true # allows using uv pip directly

    - name: Configure uv
      run: |
        echo "UV_PRERELEASE=allow" >> "$GITHUB_ENV"
        echo "UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple" >> "$GITHUB_ENV"
        echo "UV_INDEX_STRATEGY=unsafe-best-match" >> "$GITHUB_ENV"

    - name: Install dependencies
      # note: the --no-build flag can later be configured at the project level to
      # blacklist certain packages we *never* want to build
      run: |
        uv pip install setuptools
        uv pip install --no-build numpy matplotlib Cython ewah-bool-utils
        uv add git+https://github.com/yt-project/unyt.git
        uv add --extra test git+https://github.com/pytest-dev/pytest.git

    - name: Build
      # --no-build-isolation is used to guarantee that build time dependencies
      # are not installed by pip as specified from pyproject.toml, hence we get
      # to use the dev version of numpy at build time.
      run: uv sync --extra test --no-build-isolation

    - run: yt config set --local yt log_level 50  # Disable excessive output
    - name: Run Tests
      run: uv run --no-sync pytest yt -vvv --color=yes

  create-issue:
    if: ${{ failure() && github.event_name == 'schedule' }}
    needs: [build]
    permissions:
      issues: write
    runs-on: ubuntu-latest
    name: Create issue on failure

    steps:
    - name: Create issue on failure
      uses: imjohnbo/issue-bot@v3
      with:
        title: 'TST: Upcoming dependency test failures'
        body: |
          The weekly build with future dependencies has failed. Check the logs
          https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        pinned: false
        close-previous: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
