name: CI (bleeding edge)
# this workflow is heavily inspired from pandas, see
# https://github.com/pandas-dev/pandas/blob/master/.github/workflows/python-dev.yml

# goals: check stability against
# - dev version of Python, numpy, and matplotlib
# - building with future pip default options

on:
  push:
    branches:
      - main
  schedule:
    # run this every day at 3 am UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - tests-type: unit
            python-version: '3.10-dev'
          - tests-type: answer
            python-version: 3.7

    runs-on: ubuntu-latest
    name: Future Env
    timeout-minutes: 60

    concurrency:
      group: ${{ github.ref }}-dev
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Set up Python Dev Version
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies (unit)
      if: ${{ matrix.tests-type == 'unit' }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel
        python -m pip install git+https://github.com/numpy/numpy.git
        python -m pip install git+https://github.com/matplotlib/matplotlib.git
        python -m pip install cython

    - name: Install dependencies (answer)
      if: ${{ matrix.tests-type == 'answer' }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel
        python -m pip install numpy
        cp tests/matplotlibrc .  # this line should become useless with https://github.com/yt-project/yt/pull/3520
        python -m pip install git+https://github.com/matplotlib/matplotlib.git
        python -m pip install cython

    - name: Build yt
      # --no-build-isolation is used to guarantee that build time dependencies
      # are not installed by pip as specified from pyproject.toml, hence we get
      # to use the dev version of numpy at build time.
      run: |
        python setup.py build_ext -q -j2
        python -m pip install -e .[test] --no-build-isolation

    - name: Unit Tests
      if: ${{ matrix.tests-type == 'unit' }}
      run: pytest -vvv
    - name: Answer Tests
      if: ${{ matrix.tests-type == 'answer' }}
      run: python -m nose -c nose_answer.cfg --traverse-namespace
    - name: Report Failed Answers
      if: ${{ matrix.tests-type == 'answer' && failure() }}
      shell: bash
      run: python tests/report_failed_answers.py -f -m --xunit-file answer_nosetests.xml
